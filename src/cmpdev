#!/usr/bin/python
#
# -*- coding: utf-8 -*-
# Copyright (C) 2015  Red Hat, Inc.
#
# This copyrighted material is made available to anyone wishing to use,
# modify, copy, or redistribute it subject to the terms and conditions of
# the GNU General Public License v.2, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY expressed or implied, including the implied warranties of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.  You should have received a copy of the
# GNU General Public License along with this program; if not, write to the
# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.  Any Red Hat trademarks that are incorporated in the
# source code or documentation are not subject to the GNU General Public
# License and may only be used or replicated with the express permission of
# Red Hat, Inc.
#
# Red Hat Author(s): Anne Mulhern <amulhern@redhat.com>

"""
    diffdev
    =======

    Python script for comparing graphs of devices.

    .. moduleauthor::  Anne Mulhern  <amulhern@redhat.com>
"""

import argparse
import sys

from networkx import nx

import pyblk


_ACTIONS = ['dot', 'image', 'print', 'write']

_DIFFS = ["left", "right", "full"]

def get_parser():
    """
    Generate an appropriate parser.

    :returns: an argument parser
    :rtype: `ArgumentParser`
    """
    parser = argparse.ArgumentParser(
       description="Exit code is 0 if graphs are identical, 1 if equivalent"
    )
    parser.add_argument(
       "path1",
       help="path of a file containing a graph"
    )
    parser.add_argument(
       "path2",
       help="path of a file containing a graph"
    )
    return parser


def main():
    """
    The main method for listing device graphs.
    """
    args = get_parser().parse_args()

    graph1 = nx.read_gml(args.path1)
    pyblk.RewriteGraph.deconvert_graph(graph1)
    graph2 = nx.read_gml(args.path2)
    pyblk.RewriteGraph.deconvert_graph(graph2)

    return pyblk.CompareGraph.compare(graph1, graph2)


if __name__ == "__main__":
    sys.exit(main())
